//========================================================
//========================================================
实例情况不用导入，因为浏览器请求先到 NGINX ,NGINX转到tomcat，
这里只是举例说明怎么操作

//====================================由于此时

将根证书和中级证书导入到 trustmange

将私钥和服务证书导入到   keymanage

 
0).列举：
	keytool -list -keystore abcConsole.keystore
	//密码tomcat

1). 导入信任： //abcConsole.keystore 本身并不存在，会执行命令后生成
	keytool -import -alias rootkey -keystore abcConsole.keystore -file 1.cer   //导入根证书
	keytool -import -alias middkey -keystore abcConsole.keystore -file 2.crt //导入中级证书
	
	//这个与xxam证书导入办法相同，只是这里取了别名

2).	导入服务证书
	keytool -import -alias serverkey -keystore abcConsole.keystore -file 3.crt //导入服务证书
	
3). 私钥导入

	1).将 p.pem 私钥转换 pkcs12 ， 
		//需要在linux 上面操作  需要 fullchain2.pem  和 privkey2.pem 两个pem文件
		openssl pkcs12 -export -in fullchain2.pem -inkey privkey2.pem -out p.p12 -name privatekey  -password pass:tomcat

		
		openssl pkcs12 
		-export -in fullchain2.pem 
		-inkey privkey2.pem   		 
		-out p.p12 					//生成的p12文件名
		-name privatekey  		
		-password pass:tomcat		//p12 的密码

	2). 将 pkcs12   ===>导入到  keystore

		keytool -importkeystore  -deststorepass tomcat -destkeystore abcConsole.keystore  -srckeystore p.p12  -srcstoretype  PKCS12  -srcstorepass tomcat	
 
			keytool -importkeystore 
			-deststorepass tomcat  			  //目标证书库：密码
			-destkeystore abcConsole.keystore //目标证书库：文件名
			-srckeystore p.p12 	 			  //pkcs12私钥库：文件名
			-srcstoretype  PKCS12 			  //pkcs12私钥库：格式
			-srcstorepass tomcat			  //pkcs12私钥库: 密码 //第一步那密码

		
		
4).列举：导入后，再次列举，查看其中的内容

	keytool -list -keystore abcConsole.keystore			//tomcat
	//这些key但是本次导入的内容
	rootkey, 2018-7-21, trustedCertEntry,
	证书指纹 (SHA1): DA:C9:02:4F:54:D8:F6:DF:94:93:5F:B1:73:26:38:CA:6A:D7:7C:13		
	middkey, 2018-7-21, trustedCertEntry,
	证书指纹 (SHA1): E6:A3:B4:5B:06:2D:50:9B:33:82:28:2D:19:6E:FE:97:D5:95:6C:CB
	serverkey, 2018-7-21, trustedCertEntry,
	证书指纹 (SHA1): 5F:D8:A5:43:E2:C0:A5:A8:8D:2F:21:C3:78:2B:78:E7:C0:B0:24:66
	privatekey, 2018-7-21, PrivateKeyEntry,

	

