Tomcat的server.xml中
	Host节点的子元素名称是 Valve :
			（读：哇哦,Valve 本意是阀门的意思，）
	用来定义一系列的处理器
	
	//
	AccessLogValve就是用来记录容器访问请求的日志处理类。
	
	AccessLogValve是处理生成访问日志的，
	它的所有的成员变量大多都跟日志文件写入操作有关
	
	梳理它的类图如下：

		<<接口>> Valve
					|
		<<A>>    ValveBase   ————————————————————> AccessLogValve
					|
		LifecycleMBeanBase
	
//====================================使用方法
	tomcate的默认配置为：

	<Valve  className="org.apache.catalina.valves.AccessLogValve" 
			directory="logs" 
			pattern="%h %l %u %t &quot;%r&quot; %s %b" 
			prefix="localhost_access_log." 
			suffix=".txt"/>

	xml节点可以添加任意该类的属性，
	而且它的所有属性都是有默认值的
	示例：(1). renameOnRotate 是false，
				//即每天产生的日志文件都是以日期为后缀的。
		  (2). renameOnRotate 为true的情况下，
		  
				当天的日志文件是没有日期后缀的，
				就是localhost_access_log.txt，
				每天日期切换时， 当天文件重命名为前一天日期后缀，
				同时新生成当天文件。
//===================原理：
	AccessLogValve 是	这个类是LifecycleMBeanBase的子类，
	1). 所以它是随着容器一起启动的，
	2). 它的startInternal承担着创建日志文件的责任，
	3). 它的log操作是记录请求日志的，同时先执行rotate操作，
		判断是否需要生成新日志文件。
	4). 主要方法有open,close,rotate和close。
		
	流程见:
	https://blog.csdn.net/wojiushiwo945you/article/details/73298333
	



 pattern="common"

该项值可以为： common 与 combined ，
这两个预先设置好的格式对应的日志输出内容如下：
common 的值： %h %l %u %t %r %s %b
combined 的值： %h %l %u %t %r %s %b %{Referer}i %{User-Agent}i






className: 实现的java类名全路径
directory: 存放日志文件的目录；
pattern:    日志格式： 预置格式：”common”或者”combined”，
prefix:     日志文件名的前缀， 缺省值是”access_log.； （要注意后面有个小点）；
resolveHosts: 将远端主机的IP通过DNS查询转换成主机名，
			  设为true。如果为false，忽略DNS查询，报告远端主机的IP地址;
sufix:    日志文件的后缀名。（sufix=”.log”）；也需要注意有个小点；

rotatable: 缺省值为true，决定日志是否要翻转，
如果为false则永不翻转，并且忽略fileDateFormat，谨慎使用。
	
condition: 打开条件日志

fileDateFormat:允许在日志文件名称中使用定制的日期格式。
			  日志的格式也决定了日志文件翻转的频率。
				  如果想每小时翻转一次，可以定义为“yyyy-MM-dd.HH”;
writer: 日志写入PrinterWriter对象
currentLogFile: 当前写入的日志文件
buffered: 
............

 
