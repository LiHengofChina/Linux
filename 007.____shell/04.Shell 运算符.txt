
//=========================================运算符
//=========================================运算符
//=========================================运算符
	Shell 和其他编程语言一样，支持多种运算符，包括：
	算数运算符
	关系运算符
	布尔运算符
	字符串运算符
	文件测试运算符
	/**
		原生bash不支持简单的数学运算，
		但是可以通过其他命令来实现，
		例如 awk 和 expr，
	*/
	/**
		expr 最常用。
		expr 是一款表达式计算工具，
		使用它能完成表达式的求值操作。
		例如，两个数相加
		注意使用的是反引号 ` 而不是单引号 ')：	
	*/
	/**
	*/
	#!/bin/bash

	val=`expr 2 + 2`
	echo "两数之和为 : $val"
	//表达式和运算符之间要有空格，
	//完整的表达式要被 ` ` 包含
	
//=========================================算术运算符
//=========================================算术运算符
//=========================================算术运算符
	运算符	说明		举例
	+		加法		`expr $a + $b` 结果为 30。
	-		减法		`expr $a - $b` 结果为 -10。
	*		乘法		`expr $a \* $b` 结果为  200。	
	/		除法		`expr $b / $a` 结果为 2。
	%		取余		`expr $b % $a` 结果为 0。
	=		赋值		a=$b 将把变量 b 的值赋给 a。
	==		相等。		用于比较两个数字，
						相同则返回 true。	
						[ $a == $b ] 返回 false。
	!=		不相等。	用于比较两个数字，
						不相同则返回 true。	
						[ $a != $b ] 返回 true。	
			/*
		
		注意：1). 乘号要用转译符号
			  2). 条件表达式要放在方括号之间，并且要有空格
			  3). 在 MAC 中 shell 的 expr 语法是：$((表达式))
				此处表达式中的 "*" 不需要转义符号 "\" 
		*/
		
//=========================================关系运算符
//=========================================关系运算符
//=========================================关系运算符
		//关系运算符只支持数字，不支持字符串，
		//除非字符串的值是数字。
-eq	 	相等 				[ $a -eq $b ]
-ne	 	不等于				[ $a -ne $b ]
-gt	 	大于 				[ $a -gt $b ] 
-lt		小于 				[ $a -lt $b ]
-ge	 	大于等于			[ $a -ge $b ]
-le		小于等于			[ $a -le $b ] 
//=========================================布尔运算符
//=========================================布尔运算符
//=========================================布尔运算符	
!		非			[ ! false ]
-o		或			[ $a -lt 20 -o $b -gt 100 ] 
-a		且			[ $a -lt 20 -a $b -gt 100 ] 
//=========================================逻辑运算符		
//=========================================逻辑运算符		
//=========================================逻辑运算符		
&&		逻辑的 AND	[[ $a -lt 100 && $b -gt 100 ]]
||		逻辑的 OR	[[ $a -lt 100 || $b -gt 100 ]] 
//=========================================字符串运算符	
//=========================================字符串运算符	
//=========================================字符串运算符	
=		检测两个字符串是否相等，相等返回 true。		[ $a = $b ]
!=		检测两个字符串是否相等，不相等返回 true		[ $a != $b ]
-z		检测字符串长度是否为0，为0返回 true。		[ -z $a ]
-n		检测字符串长度是否为0，不为0返回 true。		[ -n $a ]
str		检测字符串是否为空，不为空返回 true。		[ $a ]
//=========================================文件测试运算符	
//=========================================文件测试运算符	
//=========================================文件测试运算符	

文件测试运算符用于检测 Unix 文件的各种属性。
操作符		说明	 
-b  file	检测文件是否是块设备文件，
			//如果是，则返回 true。	[ -b $file ] 返回 false。
-c  file	检测文件是否是字符设备文件，如果是，
			//则返回 true。	[ -c $file ] 返回 false。
-d  file	检测文件是否是目录，如果是，
			//则返回 true。	[ -d $file ] 返回 false。
-f 	file	检测文件是否是普通文件（既不是目录，也不是设备文件），
			//如果是，则返回 true。	[ -f $file ] 返回 true。
-g 	file	检测文件是否设置了 SGID 位，
			//如果是，则返回 true。	[ -g $file ] 返回 false。
-k 	file	检测文件是否设置了粘着位(Sticky Bit)，
			//如果是，则返回 true。	[ -k $file ] 返回 false。
-p 	file	检测文件是否是有名管道，
			//如果是，则返回 true。	[ -p $file ] 返回 false。
-u 	file	检测文件是否设置了 SUID 位，
			//如果是，则返回 true。	[ -u $file ] 返回 false。
-r 	file	检测文件是否可读，
			//如果是，则返回 true。	[ -r $file ] 返回 true。
-w 	file	检测文件是否可写，
			//如果是，则返回 true。	[ -w $file ] 返回 true。
-x 	file	检测文件是否可执行，
			//如果是，则返回 true。	[ -x $file ] 返回 true。
-s 	file	检测文件是否为空（文件大小是否大于0），
			//不为空返回 true。	[ -s $file ] 返回 true。
-e 	file	检测文件（包括目录）是否存在，
			//如果是，则返回 true。	[ -e $file ] 返回 true。

	/*
	file="/var/www/runoob/test.sh"	
	if [ -r $file ]
		then
			echo "文件可读"
		else
			echo "文件不可读"
	fi
	*/
		
		
		
	
	
	
	
	
	
	
	