

https://baijiahao.baidu.com/s?id=1701830551588131996&wfr=spider&for=pc


最近工作中遇到类似这样的一串代码"if [[ ${i##*.} -eq py ]] && [[ -f ${i} ]];then ……",刚开始一头雾水，所以在这里我做了一个简单的总结。



//===================================================================================================================记忆方法
//===================================================================================================================记忆方法


（1）##和%%表示最长匹配，#和%表示最短匹配。
		1个# 表示最左边
		2个## 表示最右边
		
		2个%% 表示最左边
		1个% 表示最右边
		
		

（2）键盘上#在%前面，所以#是对左边部分处理，%是对右边部分处理。


（3）shell中##处理的是文件指定样式左侧部分，
	%%处理的是文件指定样式右边的部分。


（4）* 号在"分隔号"左边处理左边
     * 号在"分隔号"右边处理右边

//=======================================
//=======================================

//==============示例1： 删除 "." 左边的部分，即获取文件名后缀。（包括自身）
//==============示例1： 删除 "." 左边的部分，即获取文件名后缀。（包括自身）


DIR=/home/shell/a/b/c/test.sh
echo ${DIR#*.}
echo ${DIR##*.}

此处由于只有一个“.”，所以“##*.”和“#*.”实现的效果是一样的。

//==============示例2：删除最后一个"/"左边的部分，即获取文件名。（包括自身）
//==============示例2：删除最后一个"/"左边的部分，即获取文件名。（包括自身）

DIR=/home/shell/a/b/c/test.sh
echo ${DIR##*/}


//==============示例3：删除第一个"/"左边的部分。（包括自身）
//==============示例3：删除第一个"/"左边的部分。（包括自身）

DIR=/home/shell/a/b/c/test.sh
echo ${DIR#*/}

//==============示例4：删除第一个“/”右边的部分，相当于清空结果。（包括自身）
//==============示例4：删除第一个“/”右边的部分，相当于清空结果。（包括自身）

DIR=/home/shell/a/b/c/test.sh
echo ${DIR%%/*}


//==============示例5：删除最右边的"/"及右边的部分，及获取文件所在路径。（包括自身）
//==============示例5：删除最右边的"/"及右边的部分，及获取文件所在路径。（包括自身）


DIR=/home/shell/a/b/c/test.sh
echo ${DIR%/*}


//==============示例5：删除"."右边的部分，即去除文件后缀名。（包括自身）
//==============示例5：删除"."右边的部分，即去除文件后缀名。（包括自身）

DIR=/home/shell/a/b/c/test.sh
echo ${DIR%.*}
echo ${DIR%%.*}

此处由于只有一个“.”，所以“%%.*”和“%.*”实现的效果是一样的。

//=================================================================================================================== 自己的示例
//=================================================================================================================== 自己的示例


DIR=home\|shell\|4.0\|5.0\|3.0\|test.0\|



//（1）删除最右边的竖线以右的内容
echo ${DIR%\|*}

//（2）加上以 逗号分隔
echo ${DIR%\|*} |  awk -F\| '{print $1,$2,$3,$4,$5,$6}'


//（3）加上以 "先逗号再点号"   分隔
echo ${DIR%\|*} |  awk -F '[\|.]' '{print $1,$2,$3,$5,$7,$9}'



 

