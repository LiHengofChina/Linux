flock 


1）.
  vi test.sh

  #! /bin/bash
  echo "Hello World"
  sleep 10
2).
  touch test.lock 

3）. 锁定这个文件，运行另一个脚本
[root@localhost ~]# flock -xn ./test.lock -c "sh /root/test.sh"

4）.此时
开启另外一个bash窗口运行
[root@localhost ~]# flock -xn ./test.lock -c "sh /root/test.sh"
前面 的脚本运行完之前，这个脚本就不会运行。



附加flock参数

-s,--shared：获取一个共享锁，在定向为某文件的FD上设置共享锁而未释放锁的时间内，其他进程试图在定向为此文件的FD上设置独占锁的请求失败，而其他进程试图在定向为此文件的FD上设置共享锁的请求会成功。
-x，-e，--exclusive：获取一个排它锁，或者称为写入锁，为默认项
-u，--unlock：手动释放锁，一般情况不必须，当FD关闭时，系统会自动解锁，此参数用于脚本命令一部分需要异步执行，一部分可以同步执行的情况。
-n，--nb, --nonblock：非阻塞模式，当获取锁失败时，返回1而不是等待
-w, --wait, --timeout seconds：设置阻塞超时，当超过设置的秒数时，退出阻塞模式，返回1，并继续执行后面的语句
-o, --close：表示当执行command前关闭设置锁的FD，以使command的子进程不保持锁。
-c, --command command：在shell中执行其后的语句




示例：
flock -no 100
