#!/usr/bin/perl

=pod
	引用就是指针，
	Perl 引用是一个标量类型可以指向变量、数组、哈希表甚至子程序，
	可以应用在程序的任何地方。
=cut

print("\n_________________________________创建引用__________________________________________________\n");

#在变量名前面加个\，就得到了这个变量的一个引用

#方式一：
=pod
			$scalarref = \$foo;     # 标量变量引用
			$arrayref  = \@ARGV;    # 列表的引用
			$hashref   = \%ENV;     # 哈希的引用
			$coderef   = \&handler; # 子过程引用
			$globref   = \*foo;     # GLOB句柄引用
=cut

#方式二：	
		#示例1：数组引用
					#创建匿名数组
					$aref= [ 1,"foo",undef,13 ]; 

					#匿名数组的元素仍然可以是匿名数组，所以我们可以用这种方法构造数组的数组，可以构造任意维度的数组。
					my $aref = [
							[1, 2, 3],
							[4, 5, 6],
							[7, 8, 9],
					];

		#示例2：哈希引用
					#在哈希中我们可以用匿名哈希引用，使用 {} 定义：
					$href = { APR =>4, AUG =>8 };

		#示例3：子程序(函数引用)
					#没有子程序名的匿名子程序引用:		
					$coderef = sub { print "Runoob!\n" };
			
print("\n_________________________________打印引用__________________________________________________\n");
#？？？取消引用？

$var = 10;
$r = \$var;
print "$var 为 : ", $$r, "\n"; #因为是 标量的引用，所以前面用 $


 
@var = (1, 2, 3);
$r = \@var;
print "@var 为: ",  @$r, "\n"; #因为是 数组的引用，所以前面用 @


%var = ('key1' => 10, 'key2' => 20);
$r = \%var;
print "\%var 为 : ", %$r, "\n"; #因为是 hash 的引用，所以前面用 @



 
print("\n_________________________________判断引用类型__________________________________________________\n");
=pod
如果你不能确定变量类型，你可以使用 ref 来判断，返回值列表如下，如果没有以下的值返回 false：
		SCALAR
		ARRAY
		HASH
		CODE
		GLOB
		REF
=cut

$var = 10;
$r = \$var;
print "r 的引用类型 : ", ref($r), "\n";
 
@var = (1, 2, 3);
$r = \@var;
print "r 的引用类型 : ", ref($r), "\n";
 
%var = ('key1' => 10, 'key2' => 20);
$r = \%var;
print "r 的引用类型 : ", ref($r), "\n";



=pod

print("\n_________________________________循环引用__________________________________________________\n");



my $foo = 100;
$foo = \$foo;
 
print "Value of foo is : ", $$foo, "\n";

=cut




print("\n_________________________________引用函数__________________________________________________\n");


sub PrintHash{
   my (%hash) = @_;
   foreach $item (%hash){
      print "元素 : $item\n";
   }
}
%hash = ('name' => 'runoob', 'age' => 3);
 

$cref = \&PrintHash; # 创建函数的引用
 
# 使用引用调用函数
&$cref(%hash);










