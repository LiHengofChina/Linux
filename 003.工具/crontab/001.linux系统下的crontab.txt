
cron 原来是unix的工具之一，主要用来任务调度，
cron 的核心应用就是使用cron表达式来处理任务调度

//===================================   crontab 介绍
//===================================   crontab 介绍

	//crontab 是 linux中的一种服务：周期执行的任务
	//查看命令
	 ps -ef | grep cron


//=================================== crontab 服务相关命令	
//=================================== crontab 服务相关命令	
	service crond start    //启动服务
	service crond stop     //关闭服务
	service crond restart  //重启服务
	service crond reload   //重新载入配置
	service crond status   //查看服务状态

//===================================   crontab
//===================================   crontab

	cron的配置文件称为"crontab"，是 "cron table" 的简写。
	
//===================================	crontab配置文件
//===================================	crontab配置文件
	1). /var/spool/cron 	目录下的文件
				//该目录存放的是每个用户包括root的crontab任务
				//以创建者的名字命名 //一个用户只会有一个该文件
			//==========crontab命令使用
			//	/var/spool/cron下的crontab文件不可以直接创建或者直接修改。
			//	该crontab文件是通过crontab命令创建的
		
		
	2).	/etc/crontab	
				//系统管理员制定的维护系统
				//以及其他任务的crontab
				//注意这是个文件，但实际操作中，我没有发现该文件
				//只发现发下目录，
		01 * * * * root run-parts /etc/cron.hourly	
						//每个小时的01分，
						//系统会以root身份去/etc/cron.hourly
						//这个目录下执行所有可执行的文件！
		02 4 * * * root run-parts /etc/cron.daily		
						//每天4点02分的时候。。。
		22 4 * * 0 root run-parts /etc/cron.weekly
						//每周。。。？？
		42 4 1 * * root run-parts /etc/cron.monthly
						//每月1号4点42分的时候。。。
		//注意是这些目录下的可执行文件
		run-parts 去掉的话， 后面就只能跟文件
		
		
//=================================== 配置任务方法	
//=================================== 配置任务方法	

	3). /etc/cron.d/	
			存放任何要执行的crontab文件或脚本。
		//======创建cron脚本
		1)创建   crontest.cron 脚本.内容如下：
			15,30,45,59 * * * * echo "xgmtest....." >> xgmtest.txt
			//每隔15分钟，执行打印一次命令
		2).将脚本添加进执行列表：
			crontab crontest.cron
		3).	crontab -l
			查看定时任务是否成功
			//或者检测/var/spool/cron下是否生成对应cron脚本
			//注意：这操作是直接替换该用户下的crontab，而不是新增
		
//=================================== 	crontab 命令权限问题
//=================================== 	crontab 命令权限问题
	crontab的使用权限问题
	
	1).查看这两个文件是否存在	
		/var/adm/cron/cron.allow 
		/var/adm/cron/cron.deny
	2).情况分析：
		1).两个文件都不存在，仅root 能用 crontab 命令。 
		2).cron.allow存在,但cron.deny不存在, 列在cron.allow  的用户能使用
		3).cron.allow不存在, cron.deny存在,除列在cron.allow 的用户能用		 
		4).两个文件都存在，以cron.allow为准




//=================================== 非 root下配置 cron
//=================================== 非 root下配置 cron

没有root账号密码 情况下配置crontab

//================编辑
crontab -e
0 8 * * * * sh /tmp/test.sh
	// 通过 crontab -e 配置，就不需要添加账号名字了。

//================查看
crontab -l

//================生成文件的目录

cd /var/spool/cron/

//=================================== 常见问题				 
//=================================== 常见问题
				 
1). 如果crontab中配置的账号密码过期，
	那么crontable执行定时任务时会失败。



