#!/usr/bin/perl



=pod

    Perl 子程序也就是用户定义的函数。
    Perl 子程序即执行一个特殊任务的一段分离的代码，它可以使减少重复代码且使程序易读。
    Perl 子程序可以出现在程序的任何地方，语法格式如下：

#定义
          sub subroutine{
             statements;
          }

#调用
         subroutine( 参数列表 );
         &subroutine( 参数列表 ); #5.0 以下版本调用子程序方法，在新版本上，虽然也支持该调用方法，但不推荐使用。

=cut

print("\n_________________________________创建与调用__________________________________________________\n");

# 函数定义
sub Hello{
   print "Hello, World!\n";
}
 
# 函数调用
Hello();

print("\n_________________________________向子程序传递参数__________________________________________________\n");
# @_ 表示形参


# 定义求平均值函数
sub Average{
   # 获取所有传入的参数
   $n = scalar(@_);   #  @ 表示它是一个数组， _是数组名字。简单说，简单说形参用 _  表示。
   $sum = 0;
 
   foreach $item (@_){
      $sum += $item;
   }
   $average = $sum / $n;
   print '传入的参数为 : ',"@_\n";           # 打印整个数组
   print "第一个参数值为 : $_[0]\n";         # 打印第一个参数
   print "传入参数的平均值为 : $average\n";  # 打印平均值
}
 
# 调用函数
Average(10, 20, 30);

print("\n_________________________________向子程序传递列表__________________________________________________\n");
#由于 @_ 变量是一个数组，所以它可以向子程序中传递列表。
#但如果我们需要传入标量和数组参数时，需要把列表放在最后一个参数上

# 定义函数
sub PrintList{
   my @list = @_;
   print "列表为 : @list\n";
}
$a = 10;
@b = (1, 2, 3, 4);

# 列表参数
PrintList($a, @b);




